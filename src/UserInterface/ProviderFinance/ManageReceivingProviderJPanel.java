/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ProviderFinance;

import Business.CDCSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ProviderEnterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinanceRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class ManageReceivingProviderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageReceivingProviderJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private Enterprise enterprise;
    private UserAccount account;

    public ManageReceivingProviderJPanel(JPanel userProcessContainer, CDCSystem system, Enterprise enterprise, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.enterprise = enterprise;
        this.account = account;
        populateRequests();
    }

    public void populateRequests() {
        DefaultTableModel dtm = (DefaultTableModel) requestJTable.getModel();
        dtm.setRowCount(0);

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equals(Organization.Type.Finance.getValue())) {
                for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                    if (request.getRequestType().equals("Finance")) {
                        FinanceRequest financeRequest = (FinanceRequest) request;
                        if (financeRequest.getFinanceType().equals("p to cdc")) {
                            Object row[] = new Object[4];
                            row[0] = financeRequest;
                            row[1] = financeRequest.getStatus();
                            row[2] = financeRequest.getRequestDate();
                            row[3] = request.getSender();
                            dtm.addRow(row);
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        viewOrderButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        totalAmountTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        billingDateTextField = new javax.swing.JTextField();
        paidDateTextField = new javax.swing.JTextField();
        paymentModeTextField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        acceptPaymentButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestJTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Status", "Request Date", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 80, 780, 120));

        viewOrderButton.setBackground(new java.awt.Color(255, 204, 204));
        viewOrderButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewOrderButton.setText("View Details");
        viewOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderButtonActionPerformed(evt);
            }
        });
        add(viewOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, 124, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Total Amount");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, -1, -1));

        totalAmountTextField.setEditable(false);
        totalAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalAmountTextFieldActionPerformed(evt);
            }
        });
        add(totalAmountTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 290, 141, 31));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Billing Date");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 340, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Payment Mode");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Paid Date");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 390, -1, -1));

        billingDateTextField.setEditable(false);
        billingDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingDateTextFieldActionPerformed(evt);
            }
        });
        add(billingDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, 141, 31));

        paidDateTextField.setEditable(false);
        paidDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidDateTextFieldActionPerformed(evt);
            }
        });
        add(paidDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 390, 141, 31));

        paymentModeTextField.setEditable(false);
        paymentModeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentModeTextFieldActionPerformed(evt);
            }
        });
        add(paymentModeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 440, 141, 31));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 570, 100, -1));

        acceptPaymentButton.setBackground(new java.awt.Color(255, 204, 204));
        acceptPaymentButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        acceptPaymentButton.setText("Accept Payment");
        acceptPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptPaymentButtonActionPerformed(evt);
            }
        });
        add(acceptPaymentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 520, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Manage Incoming Payments");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if (selectedRow >= 0) {
             WorkRequest selectedOrder = (WorkRequest) requestJTable.getValueAt(selectedRow, 0);
           FinanceRequest financeRequest= (FinanceRequest)selectedOrder;
//            int finance = (Integer)(requestJTable.getValueAt(selectedRow, 0)); 
//            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
//                if (org.getName().equals(Organization.Type.Finance.getValue())) {
//                    for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
//                        if (request.getRequestType().equals("Finance")) {
//                            FinanceRequest financeRequest = (FinanceRequest) request;
//                            if (financeRequest.getRequestID() == finance) {
                                totalAmountTextField.setText(String.valueOf(financeRequest.getTotalAmount()));
                                billingDateTextField.setText(String.valueOf(financeRequest.getBillingDate()));
                                paidDateTextField.setText(String.valueOf(financeRequest.getPaidDate()));
                                paymentModeTextField.setText(financeRequest.getPaymentMode());
//                            }
//                        }
//                    }
//                }
//            }
            
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_viewOrderButtonActionPerformed

    private void totalAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalAmountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalAmountTextFieldActionPerformed

    private void billingDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_billingDateTextFieldActionPerformed

    private void paidDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paidDateTextFieldActionPerformed

    private void paymentModeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentModeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentModeTextFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void acceptPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptPaymentButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest selectedOrder = (WorkRequest) requestJTable.getValueAt(selectedRow, 0);
            if (selectedOrder.getStatus().equals("Payment accepted by provider")) {
                JOptionPane.showMessageDialog(null, "Order already processed");
                return;
            }
            FinanceRequest finance = (FinanceRequest) selectedOrder;
            ProviderEnterprise pe = (ProviderEnterprise) enterprise;
            pe.setProviderTreasure(pe.getProviderTreasure() + finance.getTotalAmount());
            finance.setStatus("Payment accepted by provider");
            populateRequests();
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        populateRequests();
    }//GEN-LAST:event_acceptPaymentButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptPaymentButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField billingDateTextField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField paidDateTextField;
    private javax.swing.JTextField paymentModeTextField;
    private javax.swing.JTable requestJTable;
    private javax.swing.JTextField totalAmountTextField;
    private javax.swing.JButton viewOrderButton;
    // End of variables declaration//GEN-END:variables
}
