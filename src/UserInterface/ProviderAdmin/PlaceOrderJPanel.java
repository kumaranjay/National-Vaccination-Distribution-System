/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ProviderAdmin;

import Business.CDCSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Vaccine.Vaccine;
import Business.WorkQueue.OrderRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class PlaceOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PlaceOrderJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private UserAccount account;
    private Enterprise enterprise;
    private boolean isChecked = false;
    private Order order;
    private Organization organization;

    public PlaceOrderJPanel(JPanel userProcessContainer, CDCSystem system, UserAccount account, Enterprise enterprise, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.enterprise= enterprise;
        this.account = account;
        this.organization= organization;
        if (!isChecked) {
            order = new Order();
        }
        populateVaccine();
        populateOrder();
    }

    public void populateVaccine() {
        DefaultTableModel dtm = (DefaultTableModel) vaccineJTable.getModel();
        dtm.setRowCount(0);
        for (Vaccine vaccine : system.getVaccineDirectory().getVaccineList()) {

            Object row[] = new Object[2];
            row[0] = vaccine;
            row[1] = vaccine.getVaccineName();
            dtm.addRow(row);
        }

    }

    public void populateOrder() {
        DefaultTableModel dtm = (DefaultTableModel) orderTable.getModel();
        dtm.setRowCount(0);
        for (OrderItem orderItem : order.getOrderItemList()) {
            Object row[] = new Object[2];
            row[0] = orderItem.getVaccine().getVaccineName();
            row[1] = orderItem.getQuantity();
            dtm.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineJTable = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        spnQuantity = new javax.swing.JSpinner();
        addCartButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        removeButton = new javax.swing.JButton();
        modifyQuantityButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        placeOrderButton = new javax.swing.JButton();
        quantityTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vaccineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Id", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vaccineJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 490, 120));

        editButton.setBackground(new java.awt.Color(255, 204, 204));
        editButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editButton.setText("Edit Vaccine");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, -1, -1));

        spnQuantity.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add(spnQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 220, 46, -1));

        addCartButton.setBackground(new java.awt.Color(255, 204, 204));
        addCartButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addCartButton.setText("Add to Cart");
        addCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCartButtonActionPerformed(evt);
            }
        });
        add(addCartButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 220, -1, -1));

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 471, 119));

        removeButton.setBackground(new java.awt.Color(255, 204, 204));
        removeButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        add(removeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 460, -1, -1));

        modifyQuantityButton.setBackground(new java.awt.Color(255, 204, 204));
        modifyQuantityButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        modifyQuantityButton.setText("Modify Quantity :->");
        modifyQuantityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyQuantityButtonActionPerformed(evt);
            }
        });
        add(modifyQuantityButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 460, -1, -1));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 570, -1, -1));

        placeOrderButton.setBackground(new java.awt.Color(255, 204, 204));
        placeOrderButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        placeOrderButton.setText("Place Order");
        placeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderButtonActionPerformed(evt);
            }
        });
        add(placeOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 540, 130, 40));

        quantityTextField.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add(quantityTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 460, 36, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Place Order");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineJTable.getSelectedRow();
        if (selectedRow >= 0) {
            Vaccine vaccine = (Vaccine) vaccineJTable.getValueAt(selectedRow, 0);
            ViewVaccineDetailsJPanel viewVaccineDetailsJPanel = new ViewVaccineDetailsJPanel(userProcessContainer, system, vaccine);
            userProcessContainer.add("ViewVaccineDetailsJPanel", viewVaccineDetailsJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void addCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCartButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a product");
        }
        Vaccine vaccine = (Vaccine) vaccineJTable.getValueAt(selectedRow, 0);
        int quantity = (Integer) spnQuantity.getValue();

        if (quantity <= 0) {
            JOptionPane.showMessageDialog(null, "Enter appropriate quantity");
            return;
        }
        boolean quantityFlag = true;
        for (OrderItem oi : order.getOrderItemList()) {
            if (oi.getVaccine().equals(vaccine)) {
                int oldQuanitty = oi.getQuantity();
                int newQuantity = quantity + oldQuanitty;
                oi.setQuantity(newQuantity);
                quantityFlag = false;
            }

        }
        if (quantityFlag) {
            OrderItem orderItems = order.addOrder(vaccine, quantity, 0);
        }
        String message = String.valueOf(quantity) + " " + vaccine.getVaccineName() + " added to the cart";
        JOptionPane.showMessageDialog(null, message);
        populateOrder();
    }//GEN-LAST:event_addCartButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        OrderItem orderItem = (OrderItem) orderTable.getValueAt(selectedRow, 0);
        order.removeOrder(orderItem);
        JOptionPane.showMessageDialog(null, "item removed");
        populateOrder();
    }//GEN-LAST:event_removeButtonActionPerformed

    private void modifyQuantityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyQuantityButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        OrderItem orderItems = (OrderItem) orderTable.getValueAt(selectedRow, 0);
        int newQuantity;
        try {
            newQuantity = Integer.parseInt(quantityTextField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter a numeric value");
            return;
        }
        if ((newQuantity < 0)) {
            JOptionPane.showMessageDialog(null, "Please enter a valid quantity");
            return;
        }

        orderItems.setQuantity(newQuantity);

        populateOrder();
    }//GEN-LAST:event_modifyQuantityButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void placeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderButtonActionPerformed
        // TODO add your handling code here:
        order.setOrderId(Order.count++);
        order.setStatus("Pending from Provider Inventory");
        OrderRequest orderRequest= new OrderRequest();
        WorkRequest request = orderRequest;
        orderRequest.setSender(account);
        Date date = new Date();
        orderRequest.setRequestDate(date);
        orderRequest.setStatus("Pending from Inventory");
        orderRequest.setRequestType("Order");
        orderRequest.setOrder(order);
        orderRequest.setSenderEnterprise(enterprise);
        orderRequest.setOrderType("Order");
        orderRequest.setRequestID(WorkRequest.count++);
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equals(Organization.Type.Inventory.getValue())) {
                org.getWorkQueue().getWorkRequestList().add(request);
            }
        }
        organization.getWorkQueue().getWorkRequestList().add(request);
        account.getWorkQueue().getWorkRequestList().add(request);

        if (order != null) {
            order = new Order();
            JOptionPane.showMessageDialog(null, "Order placed successfully");
        } else {
            JOptionPane.showMessageDialog(null, "Order is empty");
            return;
        }
        isChecked = true;
        populateOrder();
    }//GEN-LAST:event_placeOrderButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCartButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton modifyQuantityButton;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton placeOrderButton;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.JButton removeButton;
    private javax.swing.JSpinner spnQuantity;
    private javax.swing.JTable vaccineJTable;
    // End of variables declaration//GEN-END:variables
}
