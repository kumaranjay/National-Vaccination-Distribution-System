/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ProviderAdmin;

import Business.CDCSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Vaccine.Vaccine;
import Business.WorkQueue.ReportVaccineRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class ReportVaccinesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReportVaccinesJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private UserAccount account;
    private Enterprise enterprise;
    private Organization organization;

    public ReportVaccinesJPanel(JPanel userProcessContainer, CDCSystem system, UserAccount account, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        this.enterprise = enterprise;
        populate();
        populateCombo();
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) reportVaccineJTable.getModel();
        dtm.setRowCount(0);
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equals(Organization.Type.Admin.getValue())) {
                organization = org;
                for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
                    if (request.getRequestType().equals("Report")) {
                        ReportVaccineRequest report = (ReportVaccineRequest) request;
                        Object row[] = new Object[5];
                        row[0] = report.getVaccine().getVaccineId();
                        row[1] = report;
                        row[2] = request.getRequestDate();
                        row[3] = request.getStatus();
                        row[4] = request.getResolveDate();
                        dtm.addRow(row);
                    }
                }
            }
        }
    }

    public void populateCombo() {
        vaccineComboBox.removeAllItems();
        for (Vaccine vaccine : system.getVaccineDirectory().getVaccineList()) {
            vaccineComboBox.addItem(vaccine);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        reportVaccineJTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        effectsJTextField = new javax.swing.JTextField();
        messageJTextField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        vaccineComboBox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reportVaccineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Name", "Report Date", "Status", "Response Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(reportVaccineJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 946, 140));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Vaccine Name");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 320, -1, 25));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Add Report");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 250, 89, 25));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Bad Effects");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, 96, 25));

        effectsJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        effectsJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                effectsJTextFieldActionPerformed(evt);
            }
        });
        add(effectsJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 370, 337, 56));

        messageJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        messageJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageJTextFieldActionPerformed(evt);
            }
        });
        add(messageJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 460, 337, 63));

        submitButton.setBackground(new java.awt.Color(255, 204, 204));
        submitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 560, -1, -1));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 600, -1, -1));

        viewButton.setBackground(new java.awt.Color(255, 204, 204));
        viewButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        add(viewButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 210, -1, -1));

        refreshButton.setBackground(new java.awt.Color(255, 204, 204));
        refreshButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 210, -1, -1));

        vaccineComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccineComboBoxActionPerformed(evt);
            }
        });
        add(vaccineComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, 201, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Message");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, 96, 25));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Report Vaccines");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void effectsJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_effectsJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_effectsJTextFieldActionPerformed

    private void messageJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageJTextFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        submitButton.setEnabled(false);
        submitButton.setEnabled(false);
        int selectedRow = reportVaccineJTable.getSelectedRow();
        Vaccine vaccine = (Vaccine) vaccineComboBox.getSelectedItem();
        if (selectedRow >= 0) {
            ReportVaccineRequest report = (ReportVaccineRequest) reportVaccineJTable.getValueAt(selectedRow, 0);
            vaccineComboBox.removeAllItems();
            vaccineComboBox.addItem(vaccine);
            messageJTextField.setText(report.getMessage());
            effectsJTextField.setText(report.getEffects());
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        populate();
    }//GEN-LAST:event_viewButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        populate();
        submitButton.setEnabled(true);
        vaccineComboBox.setSelectedIndex(0);
        messageJTextField.setText(null);
        effectsJTextField.setText(null);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:

        Vaccine vaccine = (Vaccine) vaccineComboBox.getSelectedItem();
        String vaccineName = vaccine.getVaccineName();
        String badEffects = effectsJTextField.getText();
        String message = messageJTextField.getText();

        if (!(vaccineName.isEmpty()) && !(badEffects.isEmpty()) && !(message.isEmpty())) {
            ReportVaccineRequest report = new ReportVaccineRequest();
            WorkRequest request = report;
            report.setVaccine(vaccine);
            report.setEffects(badEffects);
            report.setMessage(message);
            Date date = new Date();
            report.setRequestDate(date);
            report.setSenderEnterprise(enterprise);
            report.setRequestType("Report");
            report.setSender(account);
            report.setStatus("Sent to PHD");
            Network rootNetwork = system.getNetwork();
            for (Network network : rootNetwork.getNetworkList()) {
                if (network.getName().equals(enterprise.getLocation())) {
                    for (Enterprise enterprise1 : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise1.getEnterpriseType().getValue().equals("PHD Enterprise")) {
                            for (UserAccount phdAdmin : enterprise1.getUserAccountDirectory().getUserAccountList()) {
                                report.setReceiver(phdAdmin);
                                phdAdmin.getWorkQueue().getWorkRequestList().add(request);

                            }
                        }
                    }
                }
            }
            organization.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null, "Details Submitted");
            vaccineComboBox.setSelectedIndex(0);
            effectsJTextField.setText(null);
            messageJTextField.setText(null);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter all details");
        }
        populate();
    }//GEN-LAST:event_submitButtonActionPerformed

    private void vaccineComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccineComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vaccineComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField effectsJTextField;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTable reportVaccineJTable;
    private javax.swing.JButton submitButton;
    private javax.swing.JComboBox vaccineComboBox;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
