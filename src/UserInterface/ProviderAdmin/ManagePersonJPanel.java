/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ProviderAdmin;

import Business.CDCSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Roles.ProviderFinanceRole;
import Business.Roles.ProviderInventoryRole;
import Business.Roles.ProviderOrderRole;
import Business.Roles.Roles;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class ManagePersonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePersonJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private Enterprise enterprise;
    private Organization organization1;

    public ManagePersonJPanel(JPanel userProcessContainer, CDCSystem system, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.enterprise = enterprise;
        populateTable();
        populateCombo();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) userAccontTable.getModel();
        dtm.setRowCount(0);
        for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
            Object row[] = new Object[5];
            row[0] = userAccount;
            row[1] = userAccount.getPassword();
            row[2] = userAccount.getEmployee().getId();
            row[3] = userAccount.getEmployee().getName();
            row[4] = userAccount.getRoles();
            dtm.addRow(row);
        }
    }

    public void populateCombo() {
        organizationComboBox.removeAllItems();
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (!(organization.getName().equals(Organization.Type.Admin.getValue()))) {
                organizationComboBox.addItem(organization);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        organizationComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        passwordJTextField = new javax.swing.JTextField();
        usernameJTextField = new javax.swing.JTextField();
        lastNameJTextField = new javax.swing.JTextField();
        firstNameJTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userAccontTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        adress1JTextField = new javax.swing.JTextField();
        adress1JTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        contactNoJTextField = new javax.swing.JTextField();
        emailIdJTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        viewButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Username");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Organization Type");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 560, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Password");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 380, -1, -1));

        add(organizationComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 560, 203, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Last Name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 320, -1, -1));

        passwordJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        passwordJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordJTextFieldActionPerformed(evt);
            }
        });
        add(passwordJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 380, 203, -1));

        usernameJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        usernameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameJTextFieldActionPerformed(evt);
            }
        });
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 380, 203, -1));

        lastNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lastNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameJTextFieldActionPerformed(evt);
            }
        });
        add(lastNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 320, 203, -1));

        firstNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        firstNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameJTextFieldActionPerformed(evt);
            }
        });
        add(firstNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 320, 203, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("First Name");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Add Person");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 250, -1, -1));

        submitButton.setBackground(new java.awt.Color(255, 204, 204));
        submitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 620, -1, -1));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 640, -1, -1));

        userAccontTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Employee ID", "Name", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userAccontTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 50, 830, 131));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Address1");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, -1));

        adress1JTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        adress1JTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adress1JTextFieldActionPerformed(evt);
            }
        });
        add(adress1JTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 440, 203, -1));

        adress1JTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        adress1JTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adress1JTextField1ActionPerformed(evt);
            }
        });
        add(adress1JTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, 203, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Address2");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 440, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Contact No.");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 510, -1, -1));

        contactNoJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contactNoJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactNoJTextFieldActionPerformed(evt);
            }
        });
        add(contactNoJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, 203, -1));

        emailIdJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emailIdJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailIdJTextFieldActionPerformed(evt);
            }
        });
        add(emailIdJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 500, 203, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Email ID");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 500, -1, -1));

        viewButton.setBackground(new java.awt.Color(255, 204, 204));
        viewButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        add(viewButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 210, 81, -1));

        deleteButton.setBackground(new java.awt.Color(255, 204, 204));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 210, 81, -1));

        refreshButton.setBackground(new java.awt.Color(255, 204, 204));
        refreshButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 210, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Manage Person");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void passwordJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordJTextFieldActionPerformed

    private void usernameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameJTextFieldActionPerformed

    private void lastNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameJTextFieldActionPerformed

    private void firstNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameJTextFieldActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        String firstName = firstNameJTextField.getText();
        String lastName = lastNameJTextField.getText();
        String userName = usernameJTextField.getText();
        String password = passwordJTextField.getText();
        String address = adress1JTextField.getText();
        String address2 = adress1JTextField1.getText();
        String contactNo = contactNoJTextField.getText();
        String emailID = emailIdJTextField.getText();
        Organization organization = (Organization) organizationComboBox.getSelectedItem();
        Roles role = null;
        Boolean flag = system.checkUsernameUnique(system, userName);
        if (!(firstName.isEmpty()) && !(lastName.isEmpty()) && !(userName.isEmpty()) && !(password.isEmpty())) {
            if (!flag) {
                Employee employee = new Employee();
                employee.setName(firstName);
                employee.setLastName(lastName);
                employee.setAddress(address);
                employee.setAddress2(address2);
                employee.setConatctNumber(contactNo);
                employee.setEmailID(emailID);
                if (organization.getName().equals(Organization.Type.Finance.getValue())) {
                    role = new ProviderFinanceRole();
                }
                if (organization.getName().equals(Organization.Type.Order.getValue())) {
                    role = new ProviderOrderRole();
                }
                if (organization.getName().equals(Organization.Type.Inventory.getValue())) {
                    role = new ProviderInventoryRole();
                }
                for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (org == organization) {
                        organization1 = org;
                        UserAccount account = org.getUserAccountDirectory().createUserAccount(userName, password, employee, role);

                    }
                }
                enterprise.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
                JOptionPane.showMessageDialog(null, "Details Submitted");
            } else {
                JOptionPane.showMessageDialog(null, "Username not unique");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter all fields");
        }
        firstNameJTextField.setText(null);
        lastNameJTextField.setText(null);
        usernameJTextField.setText(null);
        passwordJTextField.setText(null);
        adress1JTextField.setText(null);
        adress1JTextField1.setText(null);
        contactNoJTextField.setText(null);
        emailIdJTextField.setText(null);
        organizationComboBox.setSelectedIndex(0);
        populateTable();
    }//GEN-LAST:event_submitButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void adress1JTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adress1JTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adress1JTextFieldActionPerformed

    private void adress1JTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adress1JTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adress1JTextField1ActionPerformed

    private void contactNoJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactNoJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactNoJTextFieldActionPerformed

    private void emailIdJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailIdJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailIdJTextFieldActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        submitButton.setEnabled(false);
        int selectedRow = userAccontTable.getSelectedRow();
        if (selectedRow >= 0) {
            UserAccount account = (UserAccount) userAccontTable.getValueAt(selectedRow, 0);
            for (UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()) {
                if (ua == account) {
                    String firstName = ua.getEmployee().getName();
                    String lastName = ua.getEmployee().getLastName();
                    String address1 = ua.getEmployee().getAddress();
                    String address2 = ua.getEmployee().getAddress2();
                    firstNameJTextField.setText(firstName);
                    lastNameJTextField.setText(lastName);
                    usernameJTextField.setText(ua.getUsername());
                    passwordJTextField.setText(ua.getPassword());
                    adress1JTextField.setText(address1);
                    adress1JTextField1.setText(address2);
                    contactNoJTextField.setText(ua.getEmployee().getConatctNumber());
                    emailIdJTextField.setText(ua.getEmployee().getEmailID());
                }
            }
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        populateTable();
    }//GEN-LAST:event_viewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = userAccontTable.getSelectedRow();
        Enterprise enterprise1 = null;
        if (selectedRow >= 0) {
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "warning", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                UserAccount account = (UserAccount) userAccontTable.getValueAt(selectedRow, 0);
                for (UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    if (ua == account) {
                        enterprise1 = enterprise;
                        break;

                    }

                }
            
            enterprise1.getEmployeeDirectory().getEmployeeList().remove(account.getEmployee());
            organization1.getEmployeeDirectory().getEmployeeList().remove(account.getEmployee());
            enterprise1.getUserAccountDirectory().getUserAccountList().remove(account);
            organization1.getUserAccountDirectory().getUserAccountList().remove(account);
            }
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        populateTable();

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        submitButton.setEnabled(true);
        populateTable();
        firstNameJTextField.setText(null);
        lastNameJTextField.setText(null);
        usernameJTextField.setText(null);
        passwordJTextField.setText(null);
        adress1JTextField.setText(null);
        adress1JTextField1.setText(null);
        contactNoJTextField.setText(null);
        emailIdJTextField.setText(null);
    }//GEN-LAST:event_refreshButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adress1JTextField;
    private javax.swing.JTextField adress1JTextField1;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField contactNoJTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField emailIdJTextField;
    private javax.swing.JTextField firstNameJTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameJTextField;
    private javax.swing.JComboBox organizationComboBox;
    private javax.swing.JTextField passwordJTextField;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JTable userAccontTable;
    private javax.swing.JTextField usernameJTextField;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
