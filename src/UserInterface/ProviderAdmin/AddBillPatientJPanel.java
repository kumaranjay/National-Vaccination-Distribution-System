/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ProviderAdmin;

import Business.CDCSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ProviderEnterprise;
import Business.Organization.Organization;
import Business.Provider.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinanceRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class AddBillPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddBillPatientJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private UserAccount account;
    private Enterprise enterprise;
    private Organization organization;
    private ProviderEnterprise pe;
    private Patient patient;

    public AddBillPatientJPanel(JPanel userProcessContainer, CDCSystem system, UserAccount account, Enterprise enterprise, Patient patient) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        this.enterprise = enterprise;
        this.organization = organization;
        this.patient = patient;
        pe = (ProviderEnterprise) enterprise;
        populate();
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) paymentTable.getModel();
        dtm.setRowCount(0);
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equals(Organization.Type.Finance.getValue())) {
                for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                    if (request.getRequestType().equals("Finance")) {
                        FinanceRequest finance = (FinanceRequest) request;
                        if (finance.getPatient() == patient) {
                            Object row[] = new Object[5];
                            row[0] = finance.getRequestID();
                            row[1] = finance.getStatus();
                            row[2] = finance.getRequestDate();
                            row[3] = patient.getInsuredType();
                            row[4] = finance.getTotalAmount();
                            dtm.addRow(row);
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        amountTextField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        billDetailsTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paymentTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Status", "Request Date", "Insurance Type", "Amount Due"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(paymentTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 740, 150));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Add Bill");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Amount to be Received");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, -1, -1));

        amountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountTextFieldActionPerformed(evt);
            }
        });
        add(amountTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 280, 140, 31));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 550, 100, -1));

        submitButton.setBackground(new java.awt.Color(255, 204, 204));
        submitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 510, 100, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Bill Details");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, -1, -1));

        billDetailsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billDetailsTextFieldActionPerformed(evt);
            }
        });
        add(billDetailsTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 350, 284, 122));
    }// </editor-fold>//GEN-END:initComponents

    private void amountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountTextFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        try {
            String billDetails = billDetailsTextField.getText();
            float amount = Float.parseFloat(amountTextField.getText());
            FinanceRequest finance = new FinanceRequest();
            Date date = new Date();
            WorkRequest request = null;


            if (patient.getInsuredType().equals("Fully Insured")) {
                finance.setBillingDate(date);
                finance.setRequestDate(date);
                finance.setFinanceType("p to cdc");
                finance.setPatient(patient);
                finance.setPaymentMode("Insurance");
                finance.setStatus("Paid by insurance");
                finance.setPaidDate(date);
                amount = 0;
                finance.setTotalAmount(amount);
                finance.setSenderEnterprise(enterprise);
                finance.setMessage(billDetails);
                finance.setRequestID(WorkRequest.count++);
                finance.setSender(account);
                request = finance;
                request.setRequestType("Finance");
            }
            if (patient.getInsuredType().equals("Partially Insured")) {
                finance.setBillingDate(date);
                finance.setRequestDate(date);
                finance.setFinanceType("p to cdc");
                finance.setPatient(patient);
                finance.setPaymentMode("Insurance and CDC");
                finance.setStatus("Paid by Insurance & pending from CDC");
                int percent = patient.getInsurancePercentage();
                amount = amount - (amount * percent / 100);
                finance.setTotalAmount(amount);
                finance.setSenderEnterprise(enterprise);
                finance.setMessage(billDetails);
                finance.setRequestID(WorkRequest.count++);
                finance.setSender(account);
                request = finance;
                request.setRequestType("Finance");
                system.getWorkQueue().getWorkRequestList().add(request);
            }

            if (patient.getInsuredType().equals("Un-Insured")) {
                finance.setBillingDate(date);
                finance.setRequestDate(date);
                finance.setFinanceType("p to cdc");
                finance.setPatient(patient);
                finance.setPaymentMode("CDC");
                finance.setStatus("Pending from CDC");
                finance.setTotalAmount(amount);
                finance.setSenderEnterprise(enterprise);
                finance.setMessage(billDetails);
                finance.setRequestID(WorkRequest.count++);
                finance.setSender(account);
                FinanceRequest cdcRequest = new FinanceRequest();
                cdcRequest.setBillingDate(date);
                cdcRequest.setFinanceType("Outgoing");
                cdcRequest.setStatus("Pending from CDC");
                cdcRequest.setRequestDate(date);
                cdcRequest.setTotalAmount(amount);
                cdcRequest.setSenderEnterprise(enterprise);
                cdcRequest.setSender(account);
                cdcRequest.setRequestID(WorkRequest.count++);
                WorkRequest cdc = cdcRequest;
                cdc.setRequestType("Finance");
                request = finance;
                request.setRequestType("Finance");
                system.getWorkQueue().getWorkRequestList().add(request);
            }



            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org.getName().equals(Organization.Type.Finance.getValue())) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                }
            }

            account.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null, "Details Submitted");
            populate();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter appropriate Details");

        }

    }//GEN-LAST:event_submitButtonActionPerformed

    private void billDetailsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billDetailsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_billDetailsTextFieldActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountTextField;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField billDetailsTextField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable paymentTable;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
