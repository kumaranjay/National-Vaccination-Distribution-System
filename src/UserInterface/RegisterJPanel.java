/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.CDCSystem;
import Business.DB4OUtil.DB4OUtil;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ProviderEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Provider.Clinic;
import Business.Roles.ProviderAdminRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RegistrationRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Danisha
 */
public class RegisterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegisterJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private DB4OUtil db4outil;

    public RegisterJPanel(JPanel userProcessContainer, CDCSystem system, DB4OUtil db4outil) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.db4outil = db4outil;
        populateState();
    }

    public void populateState() {
        stateComboBox.removeAllItems();
        Network network = system.getNetwork();
        for (Network stateNetwork : network.getNetworkList()) {
            stateComboBox.addItem(stateNetwork);
        }
    }

    public boolean isValidEmailAddress(String email) {
        String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
        java.util.regex.Matcher m = p.matcher(email);
        return m.matches();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        address1JTextField = new javax.swing.JTextField();
        cityJTextField = new javax.swing.JTextField();
        address2TextField = new javax.swing.JTextField();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JTextField();
        stateComboBox = new javax.swing.JComboBox();
        typeComboBox = new javax.swing.JComboBox();
        submitButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        contactNumberTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        adminNameTextField1 = new javax.swing.JTextField();
        emailIDTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        hospitalTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Type");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 160, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("State");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 310, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Username");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 400, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Address Line 2");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Address Line 1");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Password");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 400, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("City");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 320, -1, -1));

        nameTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 160, 126, -1));

        address1JTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        address1JTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address1JTextFieldActionPerformed(evt);
            }
        });
        add(address1JTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 230, 226, -1));

        cityJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cityJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityJTextFieldActionPerformed(evt);
            }
        });
        add(cityJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 310, 126, -1));

        address2TextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        address2TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address2TextFieldActionPerformed(evt);
            }
        });
        add(address2TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 270, 226, -1));

        usernameTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });
        add(usernameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 400, 126, -1));

        passwordTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });
        add(passwordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 400, 126, -1));

        add(stateComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 310, 130, -1));

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hospital", "Pharmacy", "Clinic" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });
        add(typeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, 126, -1));

        submitButton.setBackground(new java.awt.Color(255, 204, 204));
        submitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 630, 98, -1));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 670, 98, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Admin Name");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 460, -1, -1));

        contactNumberTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contactNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactNumberTextFieldActionPerformed(evt);
            }
        });
        add(contactNumberTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 490, 126, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Provider Registration");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, -1, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 750, 10));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 370, 760, 10));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Contact Number");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 500, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Email ID");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 540, -1, -1));

        adminNameTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        adminNameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminNameTextField1ActionPerformed(evt);
            }
        });
        add(adminNameTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, 126, -1));

        emailIDTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emailIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailIDTextFieldActionPerformed(evt);
            }
        });
        add(emailIDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 530, 198, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Hospital Name");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 460, -1, -1));

        hospitalTextField.setEditable(false);
        hospitalTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hospitalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalTextFieldActionPerformed(evt);
            }
        });
        add(hospitalTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 460, 126, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void address1JTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address1JTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address1JTextFieldActionPerformed

    private void cityJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityJTextFieldActionPerformed

    private void address2TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address2TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address2TextFieldActionPerformed

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        String type = (String) typeComboBox.getSelectedItem();
        String name = nameTextField.getText();
        String address1 = address1JTextField.getText();
        String address2 = address2TextField.getText();
        String address = address1 + " " + address2;
        String city = cityJTextField.getText();
        Network stateNetwork = (Network) stateComboBox.getSelectedItem();
        String username = usernameTextField.getText();
        String password = passwordTextField.getText();
        String adminName = adminNameTextField1.getText();
        String emailID = emailIDTextField.getText();
        String contactNumber = (contactNumberTextField.getText());
        String hospitalName = hospitalTextField.getText();


        //try {
        if (!(type.isEmpty()) && !(name.isEmpty()) && !(address1.isEmpty()) && !(city.isEmpty()) && !(username.isEmpty()) && !(password.isEmpty()) && !(adminName.isEmpty()) && !(emailID.isEmpty())) {
            if (!isValidEmailAddress(emailID)) {
                JOptionPane.showMessageDialog(null, "Enter a valid email id");
                return;
            }
            if (stateNetwork.getEnterpriseDirectory().checkIfEnterpriseNameIsUnique(name)) {

                Network network = new Network();
                network.setName(city);
                Boolean usernameFlag = system.checkUsernameUnique(system, username);

                if (!usernameFlag) {
                    Enterprise enterprise = null;
                    stateNetwork.getNetworkList().add(network);
                    //enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(name, Enterprise.EnterpriseType.Provider);

                    ProviderEnterprise provider = new ProviderEnterprise();
                    enterprise = provider;
                    provider.setEnterpriseName(name);
                    provider.setLocation(stateNetwork.getName());
                    provider.setCity(city);
                    provider.setAddress(address);
                    provider.setProviderType(type);
                    provider.setStatus("Deactive");
                    provider.setContactName(adminName);
                    provider.setEmailId(emailID);
                    provider.setContactNumber(contactNumber);
                    provider.setEnterpriseType(Enterprise.EnterpriseType.Provider);
                    Employee employee = new Employee();
                    employee.setName(adminName);
                    network.getEnterpriseDirectory().getEnterpriseList().add(enterprise);
                    enterprise.getEmployeeDirectory().getEmployeeList().add(employee);
                    UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new ProviderAdminRole());
                    enterprise.getOrganizationDirectory().createOrganization(Organization.Type.Order);
                    enterprise.getOrganizationDirectory().createOrganization(Organization.Type.Inventory);
                    enterprise.getOrganizationDirectory().createOrganization(Organization.Type.Finance);
                    enterprise.getOrganizationDirectory().createOrganization(Organization.Type.Admin);
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (org.getName().equals(Organization.Type.Admin.getValue())) {
                            org.getEmployeeDirectory().createEmployee(name);
                            org.getUserAccountDirectory().createUserAccount(username, password, employee, new ProviderAdminRole());
                        }
                    }
                    boolean checkHospital = false;
                    if (type.equalsIgnoreCase("Clinic")) {
                        if (!(hospitalName.isEmpty())) {
                            for (Network n : stateNetwork.getNetworkList()) {
                                if (n.getName().equals(city)) {
                                    for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                                        if (e.getEnterpriseName().equalsIgnoreCase(hospitalName)) {
                                            ProviderEnterprise p = (ProviderEnterprise) e;
                                            Clinic clinic = new Clinic();
                                            clinic.setClinicName(name);
                                            clinic.setClinicAddress(address);
                                            clinic.setClinicEnterprise(provider);
                                            p.getClinicDirectory().getClinicList().add(clinic);
                                            System.out.println("\n" + n.getName() + " " + e.getEnterpriseName());
                                        } else {
                                            checkHospital = true;
                                        }
                                    }
                                }
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Please enter the hospital name");
                        }
                    }
                    if (checkHospital) {
                        JOptionPane.showMessageDialog(stateComboBox, "The given hospital does not exist");
                    }
                    RegistrationRequest regRequest = new RegistrationRequest();
                    WorkRequest request = regRequest;
                    regRequest.setMessage("Registration request");
                    regRequest.setSender(account);
                    regRequest.setStatus("Pending from PHD");
                    regRequest.setRequestType("Registration");
                    regRequest.setEnterpriseName(hospitalName);
                    Date date = new Date();
                    regRequest.setRequestDate(date);
                    for (Enterprise enterprise1 : stateNetwork.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise1.getEnterpriseType().equals(Enterprise.EnterpriseType.PHD)) {
                            for (UserAccount phdAdmin : enterprise1.getUserAccountDirectory().getUserAccountList()) {

                                regRequest.setReceiver(phdAdmin);
                                phdAdmin.getWorkQueue().getWorkRequestList().add(request);

                            }
                        }
                    }

                    account.getWorkQueue().getWorkRequestList().add(request);
                    JOptionPane.showMessageDialog(null, "Details submitted");


                } else {
                    JOptionPane.showMessageDialog(null, "The given Username already exists");
                }
            } else {
                JOptionPane.showMessageDialog(null, "The given enterprise name already exists");
            }
            typeComboBox.setSelectedIndex(0);
            nameTextField.setText(null);
            address1JTextField.setText(null);
            address2TextField.setText(null);
            cityJTextField.setText(null);
            stateComboBox.setSelectedIndex(0);
            usernameTextField.setText(null);
            passwordTextField.setText(null);
            adminNameTextField1.setText(null);
            hospitalTextField.setText(null);
            contactNumberTextField.setText(null);
            emailIDTextField.setText(null);

        } else {
            JOptionPane.showMessageDialog(null, "Please enter all details");
        }

        db4outil.storeSystem(system);

        /* } catch (Exception e) {
         JOptionPane.showMessageDialog(null, "Please enter appropriate details");
         }*/


    }//GEN-LAST:event_submitButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        db4outil.storeSystem(system);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void contactNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactNumberTextFieldActionPerformed

    private void adminNameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminNameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminNameTextField1ActionPerformed

    private void emailIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailIDTextFieldActionPerformed

    private void hospitalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalTextFieldActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:
        String type = (String) typeComboBox.getSelectedItem();
        if (type.equalsIgnoreCase("Clinic")) {
            hospitalTextField.setEditable(true);
        } else {
            hospitalTextField.setEditable(false);
        }
    }//GEN-LAST:event_typeComboBoxActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address1JTextField;
    private javax.swing.JTextField address2TextField;
    private javax.swing.JTextField adminNameTextField1;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField cityJTextField;
    private javax.swing.JTextField contactNumberTextField;
    private javax.swing.JTextField emailIDTextField;
    private javax.swing.JTextField hospitalTextField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JComboBox stateComboBox;
    private javax.swing.JButton submitButton;
    private javax.swing.JComboBox typeComboBox;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
