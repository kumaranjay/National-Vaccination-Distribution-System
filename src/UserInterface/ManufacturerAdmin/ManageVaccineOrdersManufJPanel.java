/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManufacturerAdmin;

import Business.CDCSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ManufacturerEnterprise;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinanceRequest;
import Business.WorkQueue.OrderRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class ManageVaccineOrdersManufJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageVaccineOrdersMAnufJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private UserAccount account;
    private Enterprise enterprise;
    private InventoryOrganization inventoryOrg;
    private Order order;

    public ManageVaccineOrdersManufJPanel(JPanel userProcessContainer, CDCSystem system, Enterprise enterprise, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        this.enterprise = enterprise;
        populateRequests();
    }

    public void populateRequests() {
        DefaultTableModel dtm = (DefaultTableModel) requestJTable.getModel();
        dtm.setRowCount(0);
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equals(Organization.Type.Admin.getValue())) {
                for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                    OrderRequest orderRequest = (OrderRequest) request;
                    if (orderRequest.getOrderType().equals("Order")) {
                        Object row[] = new Object[4];
                        row[0] = orderRequest;
                        row[1] = orderRequest.getStatus();
                        row[2] = orderRequest.getRequestDate();
                        row[3] = orderRequest.getSender();
                        dtm.addRow(row);
                    }
                }
            }
        }
    }

    public void populateOrder(Order order) {
        DefaultTableModel dtm = (DefaultTableModel) orderTable.getModel();
        dtm.setRowCount(0);
        for (OrderItem orderItem : order.getOrderItemList()) {
            Object row[] = new Object[2];
            row[0] = orderItem.getVaccine().getVaccineName();
            row[1] = orderItem.getQuantity();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        viewOrderButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        makeVaccineButton = new javax.swing.JButton();
        unitPriceJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        quanitytJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        vaccineNameJTextField = new javax.swing.JTextField();
        viewOrderItemButton = new javax.swing.JButton();
        deliverOrderButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestJTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Status", "Request Date", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 60, 670, 150));

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(orderTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 280, 570, 135));

        viewOrderButton.setBackground(new java.awt.Color(255, 204, 204));
        viewOrderButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewOrderButton.setText("View Order");
        viewOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderButtonActionPerformed(evt);
            }
        });
        add(viewOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 124, -1));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 490, 98, -1));

        makeVaccineButton.setBackground(new java.awt.Color(255, 204, 204));
        makeVaccineButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        makeVaccineButton.setText("Submit");
        makeVaccineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeVaccineButtonActionPerformed(evt);
            }
        });
        add(makeVaccineButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 410, -1, -1));

        unitPriceJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        unitPriceJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitPriceJTextFieldActionPerformed(evt);
            }
        });
        add(unitPriceJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 320, 185, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Manufacture Vaccines");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 110, -1, -1));

        quanitytJTextField.setEditable(false);
        quanitytJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quanitytJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quanitytJTextFieldActionPerformed(evt);
            }
        });
        add(quanitytJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 240, 185, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Unit Price");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 320, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Quantity");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 250, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Vaccine");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 180, -1, -1));

        vaccineNameJTextField.setEditable(false);
        vaccineNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vaccineNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccineNameJTextFieldActionPerformed(evt);
            }
        });
        add(vaccineNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 180, 185, -1));

        viewOrderItemButton.setBackground(new java.awt.Color(255, 204, 204));
        viewOrderItemButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewOrderItemButton.setText("View Order Item");
        viewOrderItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderItemButtonActionPerformed(evt);
            }
        });
        add(viewOrderItemButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 440, -1, -1));

        deliverOrderButton.setBackground(new java.awt.Color(255, 204, 204));
        deliverOrderButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deliverOrderButton.setText("Deliver Order");
        deliverOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliverOrderButtonActionPerformed(evt);
            }
        });
        add(deliverOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 230, 137, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Manage Person");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            OrderRequest selectedOrder = (OrderRequest) requestJTable.getValueAt(selectedRow, 0);
            order = selectedOrder.getOrder();
            populateOrder(order);

        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_viewOrderButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void makeVaccineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeVaccineButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderTable.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                String vaccineName = (String) orderTable.getValueAt(selectedRow, 0);
                int unitPrice = Integer.parseInt(unitPriceJTextField.getText());
                for (OrderItem oi : order.getOrderItemList()) {
                    if (oi.getVaccine().getVaccineName().equals(vaccineName)) {
                        oi.setSalesPrice(unitPrice);
                    }
                }
                JOptionPane.showMessageDialog(null, "Details submitted");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Enter appropriate unit price");
            }
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        vaccineNameJTextField.setText(null);
        quanitytJTextField.setText(null);
        unitPriceJTextField.setText(null);

    }//GEN-LAST:event_makeVaccineButtonActionPerformed

    private void unitPriceJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitPriceJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitPriceJTextFieldActionPerformed

    private void quanitytJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quanitytJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quanitytJTextFieldActionPerformed

    private void vaccineNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccineNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vaccineNameJTextFieldActionPerformed

    private void viewOrderItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderItemButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderTable.getSelectedRow();
        if (selectedRow >= 0) {
            String vaccineName = (String) orderTable.getValueAt(selectedRow, 0);
            vaccineNameJTextField.setText(vaccineName);
            for (OrderItem oi : order.getOrderItemList()) {
                if (oi.getVaccine().getVaccineName().equals(vaccineName)) {
                    quanitytJTextField.setText(String.valueOf(oi.getQuantity()));

                }
            }

        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_viewOrderItemButtonActionPerformed

    private void deliverOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliverOrderButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            OrderRequest selectedOrder = (OrderRequest) requestJTable.getValueAt(selectedRow, 0);
            if(selectedOrder.getStatus().equals("Delivered to Distributor")){
                JOptionPane.showMessageDialog(null,"Order already processed");
                return;
            }
            order = selectedOrder.getOrder();
            boolean orderItemFlag = false;
            int total = 0;
            for (OrderItem oi : order.getOrderItemList()) {
                total += oi.getSalesPrice() * oi.getQuantity();
                if (!(oi.getSalesPrice() > 0)) {
                    orderItemFlag = true;
                }
            }
            if (orderItemFlag) {
                JOptionPane.showMessageDialog(null, "Please process all the order items in the order");
            } else {
                FinanceRequest finance = new FinanceRequest();
                Date date = new Date();
                finance.setBillingDate(date);
                finance.setOrder(order);
                finance.setFinanceType("m to d");
                finance.setTotalAmount(total);
                finance.setSenderEnterprise(enterprise);
                finance.setRequestID(WorkRequest.count++);
                WorkRequest request1 = finance;
                request1.setRequestDate(date);
                request1.setRequestType("Finance");
                request1.setSender(account);
                request1.setStatus("Pending from distributor");

                selectedOrder.setOrder(order);
                selectedOrder.setOrderType("Delivery");
                selectedOrder.setStatus("Delivered to Distributor");
                WorkRequest request2 = selectedOrder;

                ManufacturerEnterprise me = (ManufacturerEnterprise)enterprise;
                me.getManufOrderDirectory().getManufOrderList().add(order);
               
                for(Organization org: system.getNationalDistributor().getOrganizationDirectory().getOrganizationList()){
                    if(org.getName().equals(Organization.Type.Finance.getValue())){
                        org.getWorkQueue().getWorkRequestList().add(request1);
                    }
                }
                
                for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
                    if(org.getName().equals(Organization.Type.Finance.getValue())){
                        org.getWorkQueue().getWorkRequestList().add(request1);
                    }
                }
                
                account.getWorkQueue().getWorkRequestList().add(request1);
                account.getWorkQueue().getWorkRequestList().add(request2);
                JOptionPane.showMessageDialog(null, "Order delivered to the distributor");
                populateRequests();
            }

        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_deliverOrderButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton deliverOrderButton;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton makeVaccineButton;
    private javax.swing.JTable orderTable;
    private javax.swing.JTextField quanitytJTextField;
    private javax.swing.JTable requestJTable;
    private javax.swing.JTextField unitPriceJTextField;
    private javax.swing.JTextField vaccineNameJTextField;
    private javax.swing.JButton viewOrderButton;
    private javax.swing.JButton viewOrderItemButton;
    // End of variables declaration//GEN-END:variables
}
