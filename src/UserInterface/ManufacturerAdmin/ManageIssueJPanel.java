/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManufacturerAdmin;

import Business.CDCSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ManufacturerEnterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReportVaccineRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class ManageIssueJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageIssueJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private UserAccount account;
    private Enterprise enterprise;
    public ManageIssueJPanel(JPanel userProcessContainer, CDCSystem system, Enterprise enterprise, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        this.enterprise = enterprise;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) complaintsJTable.getModel();
        model.setRowCount(0);
        ManufacturerEnterprise me= (ManufacturerEnterprise)enterprise;
        for (WorkRequest request : me.getWorkQueue().getWorkRequestList()) {
            if (request.getRequestType().equalsIgnoreCase("Report")) {
                ReportVaccineRequest report = (ReportVaccineRequest) request;
                    Object row[] = new Object[6];
                    row[0] = report;
                    row[1] = report.getVaccine().getVaccineName();
                    row[2] = report.getMessage();
                    row[3] = report.getSender().getEmployee().getName();
                    row[4] = report.getRequestDate();
                    row[5] = report.getResolveDate();
                    model.addRow(row);
                
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        complaintsJTable = new javax.swing.JTable();
        backButton1 = new javax.swing.JButton();
        issueReportButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        complaintsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Message", "Sender", "Report Date", "Blacklisted on"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(complaintsJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 980, 162));

        backButton1.setBackground(new java.awt.Color(255, 204, 204));
        backButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton1.setText("<< Back");
        backButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton1ActionPerformed(evt);
            }
        });
        add(backButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, -1));

        issueReportButton.setBackground(new java.awt.Color(255, 204, 204));
        issueReportButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        issueReportButton.setText("Read Issue Report");
        issueReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueReportButtonActionPerformed(evt);
            }
        });
        add(issueReportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 280, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Manage Complaints on Vaccines");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout= (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton1ActionPerformed

    private void issueReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueReportButtonActionPerformed
        // TODO add your handling code here:
        JTextField vaccineName = new JTextField();
        JTextField sender = new JTextField();
        JTextArea issue = new JTextArea();

        int row = complaintsJTable.getSelectedRow();
        int rowC = complaintsJTable.getSelectedRowCount();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a complaint to view the issue report");
            return;
        }
        if (rowC > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one complaint");
            return;
        }

        ReportVaccineRequest report = (ReportVaccineRequest) complaintsJTable.getValueAt(row, 0);
        vaccineName.setText(report.getVaccine().getVaccineName());
        sender.setText(report.getSender().getEmployee().getName());
        issue.setText(report.getEffects());

        Object[] viewIssue = {"Vaccine Name:", vaccineName, "Sender:", sender, "Issue Report:", issue};
        JOptionPane.showConfirmDialog(null, viewIssue, "Issue Report", JOptionPane.CLOSED_OPTION, -1);
    }//GEN-LAST:event_issueReportButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton1;
    private javax.swing.JTable complaintsJTable;
    private javax.swing.JButton issueReportButton;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
