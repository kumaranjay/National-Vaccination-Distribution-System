/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CDCSystemAdmin;


import Business.CDCSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class ManageNetworkJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageNetworkJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;

    public ManageNetworkJPanel(JPanel userProcessContainer, CDCSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateCombo();

    }

    public void populateCombo() {
        stateComboBox.removeAllItems();
        for(Network network: system.getNetwork().getNetworkList()){
            stateComboBox.addItem(network);
        }

    }

    public void populateTable(Network network) {
        DefaultTableModel dtm = (DefaultTableModel) networkTable.getModel();
        dtm.setRowCount(0);
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            Object row[] = new Object[5];
            row[0] = enterprise.getEnterpriseType();
            row[1] = enterprise.getLocation();
            row[2] = enterprise.getContactName();
            row[3] = enterprise.getContactNumber();
            row[4] = enterprise.getEmailId();
            dtm.addRow(row);
        }
    }
    /* This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stateComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        networkTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        removeEnterpriseButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        maxLimitJTextField = new javax.swing.JTextField();
        populationJTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stateComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        stateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateComboBoxActionPerformed(evt);
            }
        });
        add(stateComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 137, 28));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Manage Network");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, -1, -1));

        networkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Location", "Contact name", "Contact Number", "Email ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(networkTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 980, 160));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 98, -1));

        removeEnterpriseButton.setBackground(new java.awt.Color(255, 204, 204));
        removeEnterpriseButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        removeEnterpriseButton.setText("Remove Enterprise");
        removeEnterpriseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEnterpriseButtonActionPerformed(evt);
            }
        });
        add(removeEnterpriseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 360, 176, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Max Limit:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 490, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Network:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Population:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 430, -1, -1));

        maxLimitJTextField.setEditable(false);
        maxLimitJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        maxLimitJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxLimitJTextFieldActionPerformed(evt);
            }
        });
        add(maxLimitJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 490, 224, -1));

        populationJTextField.setEditable(false);
        populationJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        populationJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populationJTextFieldActionPerformed(evt);
            }
        });
        add(populationJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 430, 224, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void stateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboBoxActionPerformed
        // TODO add your handling code here:
        Network network = (Network) stateComboBox.getSelectedItem();
        populateTable(network);
        populationJTextField.setText(String.valueOf(network.getPopulation()));
        int maxVaccine = (int) (network.getPopulation() * 0.05);
        maxLimitJTextField.setText(String.valueOf(maxVaccine));
        
    }//GEN-LAST:event_stateComboBoxActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void removeEnterpriseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEnterpriseButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = networkTable.getSelectedRow();
        if (selectedRow >= 0) {
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete", "warning", JOptionPane.YES_NO_OPTION);
            Network network = (Network) stateComboBox.getSelectedItem();
            if (option == JOptionPane.YES_OPTION) {
                Enterprise enterprise = (Enterprise) networkTable.getValueAt(selectedRow, 0);
                network.getEnterpriseDirectory().getEnterpriseList().remove(enterprise);
            }
            populateTable(network);
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        
    }//GEN-LAST:event_removeEnterpriseButtonActionPerformed

    private void maxLimitJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxLimitJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxLimitJTextFieldActionPerformed

    private void populationJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populationJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_populationJTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maxLimitJTextField;
    private javax.swing.JTable networkTable;
    private javax.swing.JTextField populationJTextField;
    private javax.swing.JButton removeEnterpriseButton;
    private javax.swing.JComboBox stateComboBox;
    // End of variables declaration//GEN-END:variables
}
