/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CDCSystemAdmin;

import Business.CDCSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ManufacturerEnterprise;
import Business.Network.Network;
import Business.WorkQueue.ReportVaccineRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class ManageReportCDCJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageReportJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private ReportVaccineRequest report;

    public ManageReportCDCJPanel(JPanel userProcessContainer, CDCSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.report = new ReportVaccineRequest();
        populate();
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) reportVaccineJTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : system.getWorkQueue().getWorkRequestList()) {
            if (request.getRequestType().equals("Report")) {
                ReportVaccineRequest report = (ReportVaccineRequest) request;
                Object row[] = new Object[5];
                row[0] = report.getVaccine().getVaccineId();
                row[1] = report;
                row[2] = request.getRequestDate();
                row[3] = request.getStatus();
                row[4] = request.getResolveDate();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        reportVaccineJTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        effectsJTextField = new javax.swing.JTextField();
        vaccineNameJTextField = new javax.swing.JTextField();
        messageJTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        forwardButton = new javax.swing.JButton();
        declineComplaintButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        backButton2 = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reportVaccineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Id", "Manuf Name", "Report Date", "Status", "Response Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(reportVaccineJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 1010, 170));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Bad Effects");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, -1, 25));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Message");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, 78, 25));

        effectsJTextField.setEditable(false);
        effectsJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        effectsJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                effectsJTextFieldActionPerformed(evt);
            }
        });
        add(effectsJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 370, 337, 78));

        vaccineNameJTextField.setEditable(false);
        vaccineNameJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        vaccineNameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccineNameJTextFieldActionPerformed(evt);
            }
        });
        add(vaccineNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 300, 203, -1));

        messageJTextField.setEditable(false);
        messageJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        messageJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageJTextFieldActionPerformed(evt);
            }
        });
        add(messageJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 337, 78));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Vaccine Reports");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, -1, 25));

        forwardButton.setBackground(new java.awt.Color(255, 204, 204));
        forwardButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        forwardButton.setText("Blacklist Manufacturer");
        forwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardButtonActionPerformed(evt);
            }
        });
        add(forwardButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 610, -1, -1));

        declineComplaintButton.setBackground(new java.awt.Color(255, 204, 204));
        declineComplaintButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        declineComplaintButton.setText("Decline Complaint");
        declineComplaintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineComplaintButtonActionPerformed(evt);
            }
        });
        add(declineComplaintButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 610, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Vaccine Name");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, -1, 25));

        backButton2.setBackground(new java.awt.Color(255, 204, 204));
        backButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton2.setText("<< Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });
        add(backButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 650, 98, -1));

        viewButton.setBackground(new java.awt.Color(255, 204, 204));
        viewButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        add(viewButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 250, 120, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void effectsJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_effectsJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_effectsJTextFieldActionPerformed

    private void vaccineNameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccineNameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vaccineNameJTextFieldActionPerformed

    private void messageJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageJTextFieldActionPerformed

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = reportVaccineJTable.getSelectedRow();
        if (selectedRow >= 0) {
            report = (ReportVaccineRequest) reportVaccineJTable.getValueAt(selectedRow, 1);
            report.setStatus("Manufactured Blacklisted");
            Date date = new Date();
            report.setResolveDate(date);
            WorkRequest request = report;

            for (Network stateNetwork : system.getNetwork().getNetworkList()) {
                if (stateNetwork.getName().equals(report.getSenderEnterprise().getLocation())) {
                    for (Enterprise enterprise : stateNetwork.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnterpriseType.Manufacturer.getValue())) {
                            ManufacturerEnterprise me = (ManufacturerEnterprise) enterprise;
                            int count = me.getBlackListCount();
                            me.setBlackListCount(++count);
                            System.out.println(" "+me.getBlackListCount());
                            if (me.getBlackListCount() >= 1) {
                                me.setBlacklisted(true);
                                me.setEnterpriseName("(Blacklisted)"+me.getEnterpriseName());
                            }
                            me.getWorkQueue().getWorkRequestList().add(request);
                            
                        }
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Manufactured Blacklisted");
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        populate();
    }//GEN-LAST:event_forwardButtonActionPerformed

    private void declineComplaintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineComplaintButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = reportVaccineJTable.getSelectedRow();
        if (selectedRow >= 0) {
            WorkRequest selectedRequest = (WorkRequest) reportVaccineJTable.getValueAt(selectedRow, 0);
            selectedRequest.setStatus("Rejected");
            JTextField messageJTextField = new JTextField();

            Object[] addMessage = {"Message:", messageJTextField};
            int option = JOptionPane.showConfirmDialog(null, addMessage, "Message", JOptionPane.OK_CANCEL_OPTION, -1);

            if (option == JOptionPane.YES_OPTION) {
                if (messageJTextField.getText().equals(null)) {
                    JOptionPane.showMessageDialog(null, "Please provide a valid entry");
                    return;

                }

                String message = messageJTextField.getText();
                report.setMessage(message);
            }

            JOptionPane.showMessageDialog(null, "Complaint denied");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }


    }//GEN-LAST:event_declineComplaintButtonActionPerformed

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton2ActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = reportVaccineJTable.getSelectedRow();
        if (selectedRow >= 0) {
            ReportVaccineRequest report = (ReportVaccineRequest) reportVaccineJTable.getValueAt(selectedRow, 1);
            vaccineNameJTextField.setText(report.getVaccine().getVaccineName());
            messageJTextField.setText(report.getMessage());
            effectsJTextField.setText(report.getEffects());
        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        populate();
    }//GEN-LAST:event_viewButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton2;
    private javax.swing.JButton declineComplaintButton;
    private javax.swing.JTextField effectsJTextField;
    private javax.swing.JButton forwardButton;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JTable reportVaccineJTable;
    private javax.swing.JTextField vaccineNameJTextField;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
