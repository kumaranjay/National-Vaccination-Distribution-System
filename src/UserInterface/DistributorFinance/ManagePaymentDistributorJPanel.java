/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DistributorFinance;

import Business.CDCSystem;
import Business.Enterprise.DistributorEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinanceRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Danisha
 */
public class ManagePaymentDistributorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePaymentDistributorJPanel
     */
    private JPanel userProcessContainer;
    private CDCSystem system;
    private Enterprise enterprise;
    private UserAccount account;
    private Order order;

    public ManagePaymentDistributorJPanel(JPanel userProcessContainer, CDCSystem system, Enterprise enterprise, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.enterprise = enterprise;
        this.account = account;
        populateRequests();
    }

    public void populateRequests() {
        DefaultTableModel dtm = (DefaultTableModel) requestJTable.getModel();
        dtm.setRowCount(0);

        for (Organization org : system.getNationalDistributor().getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equals(Organization.Type.Finance.getValue())) {
                for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                    FinanceRequest financeRequest = (FinanceRequest) request;
                    if (financeRequest.getFinanceType().equals("m to d")) {
                        Object row[] = new Object[4];
                        row[0] = financeRequest;
                        row[1] = financeRequest.getStatus();
                        row[2] = financeRequest.getRequestDate();
                        row[3] = financeRequest.getSender();
                        dtm.addRow(row);
                    }
                }
            }
        }
    }

    public void populateOrder(Order order) {
        DefaultTableModel dtm = (DefaultTableModel) orderTable.getModel();
        dtm.setRowCount(0);
        for (OrderItem orderItem : order.getOrderItemList()) {
            Object row[] = new Object[2];
            row[0] = orderItem.getVaccine().getVaccineName();
            row[1] = orderItem.getQuantity();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        viewOrderButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        totalAmountJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        billingDateJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        paymentjComboBox = new javax.swing.JComboBox();
        submitButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestJTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Status", "Request Date", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 670, 170));

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(orderTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, 540, 150));

        backButton.setBackground(new java.awt.Color(255, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 100, -1));

        viewOrderButton2.setBackground(new java.awt.Color(255, 204, 204));
        viewOrderButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewOrderButton2.setText("View Request");
        viewOrderButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderButton2ActionPerformed(evt);
            }
        });
        add(viewOrderButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 140, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Total Amount");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 210, -1, -1));

        totalAmountJTextField.setEditable(false);
        totalAmountJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalAmountJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalAmountJTextFieldActionPerformed(evt);
            }
        });
        add(totalAmountJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 210, 149, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Billing Date");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 280, -1, -1));

        billingDateJTextField.setEditable(false);
        billingDateJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        billingDateJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingDateJTextFieldActionPerformed(evt);
            }
        });
        add(billingDateJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 270, 149, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Payment Mode");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 350, -1, -1));

        paymentjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Demand Draft", "Cheque" }));
        add(paymentjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 340, 149, -1));

        submitButton.setBackground(new java.awt.Color(255, 204, 204));
        submitButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 420, 124, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Manage Outgoing Payments");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("View Request");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 160, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewOrderButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            FinanceRequest selectedOrder = (FinanceRequest) requestJTable.getValueAt(selectedRow, 0);
            order = selectedOrder.getOrder();
            populateOrder(order);
            totalAmountJTextField.setText(String.valueOf(selectedOrder.getTotalAmount()));
            billingDateJTextField.setText(String.valueOf(selectedOrder.getBillingDate()));

        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_viewOrderButton2ActionPerformed

    private void totalAmountJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalAmountJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalAmountJTextFieldActionPerformed

    private void billingDateJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingDateJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_billingDateJTextFieldActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if (selectedRow >= 0) {
            FinanceRequest selectedOrder = (FinanceRequest) requestJTable.getValueAt(selectedRow, 0);
            if(selectedOrder.getStatus().equals("Paid to Manufacturer")){
                JOptionPane.showMessageDialog(null,"Order already processed");
                return;
            }
            String paymentMode = String.valueOf(paymentjComboBox.getSelectedItem());
            selectedOrder.setPaymentMode(paymentMode);
            Date date = new Date();
            selectedOrder.setPaidDate(date);
            selectedOrder.setReceiver(account);

            DistributorEnterprise de = (DistributorEnterprise) enterprise;
            float treasureAmount = de.getDistTreasure();
            de.setDistTreasure(treasureAmount - selectedOrder.getTotalAmount());
            selectedOrder.setStatus("Paid to Manufacturer");
            JOptionPane.showMessageDialog(null, "Payment done successfully");
            


        } else if (selectedRow > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one row");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
        populateRequests();
        totalAmountJTextField.setText(null);
        billingDateJTextField.setText(null);
        paymentjComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_submitButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField billingDateJTextField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable orderTable;
    private javax.swing.JComboBox paymentjComboBox;
    private javax.swing.JTable requestJTable;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField totalAmountJTextField;
    private javax.swing.JButton viewOrderButton2;
    // End of variables declaration//GEN-END:variables
}
